[alias]
aliases = "!if command -v pygmentize &>/dev/null; then git config -l | grep alias | cut -c 7- | pygmentize -l ini -O style=nord; else git config -l | grep alias | cut -c 7-; fi"
amend = commit --amend

discard = checkout --
force = "!git push origin $(git mainbranch) --force-with-lease --force-if-includes"
mainbranch = "!git remote show origin | sed -n '/HEAD branch/s/.*: //p'"
nevermind = "!git reset --hard HEAD && git clean -d -f"
st = status --short --branch
subup = submodule update --init --recursive
synced = "!git pull origin $(git mainbranch) --rebase" # Rebase on remote main
tags = tag -l
unadd = reset HEAD --
undo = reset --soft HEAD~1
unstage = reset HEAD --

ls = log --color --pretty=oneline -n 20 --graph --abbrev-commit
ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat -n 10
lnc = log --pretty=format:"%h\\ %s\\ [%cn]" # No colors.  Good for pipes

[apply]
whitespace = fix

[branch]
sort = -committerdate

[column]
ui = auto

[core]
# Treat spaces before tabs and all kinds of trailing whitespace as an error
# [default] trailing-space: looks for spaces at the end of a line
# [default] space-before-tab: looks for spaces before tabs at the beginning of a line
whitespace = space-before-tab,-indent-with-non-tab,trailing-space

# Prevent showing files whose names contain non-ASCII symbols as unversioned.
# http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
precomposeunicode = false

# Set default editor to use VisualCode
editor = code --wait

[color]
ui = true

[color "branch"]
current = yellow reverse
local = yellow
remote = green

[color "diff"]
meta = yellow
frag = magenta bold
old = red bold
new = green bold
commit = yellow bold
whitespace = red reverse

[color "diff-highlight"]
oldNormal = red bold
oldHighlight = red bold 52
newNormal = green bold
newHighlight = green bold 22

[color "status"]
added = yellow
changed = green
untracked = cyan

[diff "bin"]
# Use `hexdump` to diff binary files
textconv = hexdump -v -C
algorithm = histogram

[diff]
renames = copies # Detect copies as well as renames
colorMoved = default

[difftool "vscode"]
cmd = code --wait --diff $LOCAL $REMOTE

[help]
autocorrect = 1

[user]
name = Ka Wo Fong
email = 14829553+kawofong@users.noreply.github.com

[fetch]
prune = true
pruneTags = true
all = true

[github]
user = kawofong

[init]
defaultBranch = main

[log]
decorate = short
trustExitCode = true
keepBackup = true
prompt = false

[merge]
tool = vscode

[mergetool "vscode"]
cmd = code --wait $MERGED

[pretty]
custom = "%C(magenta)%h%C(red)%d %C(yellow)%ar %C(green)%s %C(yellow)(%an)"
#                     │        │            │            │             └─ author
#                     │        │            │            └─ message
#                     │        │            └─ date (relative)
#                     │        └─ decorations (branch, heads or tags)
#                     └─ hash (abbreviated)

[init]
defaultBranch = main

[pull]
# avoid accidentally creating a merge commit when you run git pull on a branch where the upstream branch has diverged
rebase = true

[push]
default = simple
followTags = true
autoSetupRemote = true

[pager]
status = true
show-branch = true

[rebase]
autosquash = true
autostash = true
updateRefs = true

[tag]
sort = version:refname

[filter "lfs"]
required = true
clean = git-lfs clean -- %f
smudge = git-lfs smudge -- %f
process = git-lfs filter-process
